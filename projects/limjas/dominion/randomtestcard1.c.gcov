        -:    0:Source:randomtestcard1.c
        -:    0:Graph:randomtestcard1.gcno
        -:    0:Data:randomtestcard1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:#include <stdlib.h>
        -:    8:#include <time.h>
        -:    9:
        -:   10://Smithy Test +3 cards
        1:   11:int main() {
        -:   12:    struct gameState game;
        1:   13:    int randSeed = 10000;
        1:   14:    srand(time(NULL));
        1:   15:    int currentplayer = 0;
        1:   16:    int kingdom[10] = {adventurer, feast, gardens, village, remodel, mine, cutpurse, baron, tribute, smithy};
        1:   17:    int myCard = smithy;
        1:   18:    int myChoice1 = -1;
        1:   19:    int myChoice2 = -1;
        1:   20:    int myChoice3 = -1;
        1:   21:    int myHandPos = -1;
        1:   22:    int* myBonus = 0;
        -:   23:    int initialHandCt;
        -:   24:    int afterHandCt;
        1:   25:    int failureDrawingCard = 0;
        1:   26:    int testPassed = 0;
        -:   27:    //randomize hand size
  1500001:   28:    for(int i = 0; i < 1500000; i++) {
  1500000:   29:        initializeGame(2, kingdom, randSeed, &game);
  1500000:   30:        int sizeOfDeck = rand() % (MAX_DECK + 1);
  1500000:   31:        int sizeOfHand = rand() % (sizeOfDeck + 1);
  1500000:   32:        game.deckCount[0] = sizeOfDeck - sizeOfHand;
  1500000:   33:        game.handCount[0] = sizeOfHand;
  1500000:   34:        initialHandCt = game.handCount[0];
  1500000:   35:        cardEffect(myCard, myChoice1, myChoice2, myChoice3, &game, myHandPos, myBonus);
  1500000:   36:        afterHandCt = game.handCount[0];
  1500000:   37:        if (afterHandCt != (initialHandCt + 2)) {
    53674:   38:            printf("Incorrect amount of cards drawn: Test Failed\n\n");
    53674:   39:            failureDrawingCard++;
        -:   40:        }
        -:   41:        else {
  1446326:   42:            printf("Tests Passed\n");
  1446326:   43:            testPassed++;
        -:   44:        }
        -:   45:    }
        1:   46:    printf("\nFor Smithy Random Test Card 1: Test passed: %d tests\n", testPassed);
        1:   47:    printf("Failures for drawing: %d\n",failureDrawingCard);
        1:   48:    return 0;
        -:   49:}
